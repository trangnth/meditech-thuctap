#!/usr/bin/env python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

# (c) 2017 Heinlein Support GmbH
#          Robert Sander <r.sander@heinlein-support.de>

# This is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  This file is distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

#{u'df': {u'nodes': [{u'crush_weight': 0.097595,
#                     u'depth': 2,
#                     u'device_class': u'hdd',
#                     u'id': 5,
#                     u'kb': 104754156,
#                     u'kb_avail': 103598436,
#                     u'kb_used': 1155720,
#                     u'name': u'osd.0',
#                     u'pgs': 94,
#                     u'pool_weights': {},
#                     u'reweight': 1.0,
#                     u'type': u'osd',
#                     u'type_id': 0,
#                     u'utilization': 1.103269,
#                     u'var': 0.989588}],
#         u'stray': [{u'crush_weight': 0.0,
#                     u'depth': 0,
#                     u'id': 6,
#                     u'kb': 0,
#                     u'kb_avail': 0,
#                     u'kb_used': 0,
#                     u'name': u'osd.6',
#                     u'pgs': 0,
#                     u'reweight': 0.0,
#                     u'type': u'osd',
#                     u'type_id': 0,
#                     u'utilization': 0.0,
#                     u'var': 0.0}],
#         u'summary': {u'average_utilization': 1.114877,
#                      u'dev': 0.045563,
#                      u'max_var': 1.087023,
#                      u'min_var': 0.964106,
#                      u'total_kb': 628524936,
#                      u'total_kb_avail': 621517656,
#                      u'total_kb_used': 7007280}},
# u'perf': {u'osd_perf_infos': [{u'id': 5,
#                                u'perf_stats': {u'apply_latency_ms': 0,
#                                                u'commit_latency_ms': 0}}]}}


def inventory_cephosd(parsed):
    if 'df' in parsed and 'nodes' in parsed['df']:
        for osd in parsed['df']['nodes']:
            yield str(osd['id']), {}

def check_cephosd(item, params, parsed):
    if 'df' in parsed and 'nodes' in parsed['df']:
        for osd in parsed['df']['nodes']:
            if str(osd['id']) == item:
                size_mb = osd['kb'] / 1024.0
                avail_mb = osd['kb_avail'] / 1024.0
                yield df_check_filesystem_list(item, params, [ (item, size_mb, avail_mb, 0) ])
    if 'perf' in parsed and 'osd_perf_infos' in parsed['perf']:
        for osd in parsed['perf']['osd_perf_infos']:
            if str(osd['id']) == item:
                apply_latency = osd['perf_stats']['apply_latency_ms']
                commit_latency = osd['perf_stats']['commit_latency_ms']
                yield (0, 'Apply Latency: %dms, Commit Latency: %dms' % ( apply_latency, commit_latency) , [ ( 'apply_latency', apply_latency / 1000.0), ( 'commit_latency', commit_latency / 1000.0) ] )

check_info["cephosd"] = {
    'parse_function'         : parse_json,
    'check_function'         : check_cephosd,
    'inventory_function'     : inventory_cephosd,
    'service_description'    : 'Ceph OSD %s',
    'has_perfdata'           : True,
    'group'                  : 'filesystem',
    'default_levels_variable': 'filesystem_default_levels',
    'includes'               : [ 'df.include', 'json.include', "size_trend.include" ],
}
