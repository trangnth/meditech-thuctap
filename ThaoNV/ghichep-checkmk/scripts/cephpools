#!/usr/bin/env python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

# (c) 2014 Heinlein Support GmbH
#          Robert Sander <r.sander@heinlein-support.de>

# This is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  This file is distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

#<<<cephpools>>>
#GLOBAL:
#    SIZE       AVAIL      RAW USED     %RAW USED 
#    67562G     48491G       19070G         28.23 
#POOLS:
#    NAME         ID     USED      %USED     MAX AVAIL     OBJECTS 
#    data         0          0         0        15162G           0 
#    metadata     1          0         0        15162G           0 
#    rbd          2      5479G      8.11        15162G     1443443 
#    rbd2         3      1260G      1.87        22743G      341364 
#    ssd          11     3268M         0          161G        1010 


def inventory_cephpools(info):
    inventory = []
    pool = False
    for line in info:
        if line[0] == 'POOLS:':
            pool = True
            continue
        if pool:
            if line[0] == 'NAME':
                continue
            inventory.append(( line[0], [] ))
    return inventory

def check_cephpools(item, params, info):
    factor = { 'P': 1125899906842624,
               'T': 1099511627776,
               'G': 1073741824,
               'M': 1048576,
               'K': 1024,
               '': 1,
             }
    for line in info:
        if item == line[0]:
            rc = 0
            if line[2][-1] in factor.keys():
                used = saveint(line[2][:-1]) * factor[line[2][-1]]
            else:
                used = saveint(line[2])
            if line[4][-1] in factor.keys():
                max_avail = saveint(line[4][:-1]) * factor[line[4][-1]]
            else:
                max_avail = saveint(line[4])
            size_mb = float(used + max_avail) / float(factor['M'])
            avail_mb = float(max_avail) / float(factor['M'])
            return df_check_filesystem_list(item, params, [ (item, size_mb, avail_mb, 0) ])
 
    return (3, 'Pool %s not found' % item, [])

check_info["cephpools"] = {
    'check_function'         : check_cephpools,
    'inventory_function'     : inventory_cephpools,
    'service_description'    : 'fs_Ceph Pool %s',
    'has_perfdata'           : True,
    'group'                  : 'filesystem',
    'default_levels_variable': 'filesystem_default_levels',
    'includes'               : [ 'df.include' ],
}

